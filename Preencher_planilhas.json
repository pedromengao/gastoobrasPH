{
  "name": "Preencher planilhas",
  "nodes": [
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "1",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "fe866086-8920-4877-b227-a07fa2f893d2"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "dd4d7864-ce95-4777-886a-4c35790ae08f",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "2",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8cbb1c32-faa6-4936-a7c6-a24724478fd6",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "3",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "3a51421f-de37-48eb-be3f-3d7ea5572772",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "4",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "7b327b6a-54e4-4129-8911-cc0fc4f1a196",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "5",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -1320,
        880
      ],
      "id": "e3da782e-4f0e-4bf2-aa0b-71012a43a350",
      "name": "Switch"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{\n\"Transforme todos os produtos encontrados na frase abaixo em linhas separadas, cada uma no formato: data:quantidade:item:valor.\\n\" +\n\"Se não vier data na mensagem, use essa data: \" + $('Set Data Hoje').item.json.data_hoje + \".\\n\" +\n\"Se não houver quantidade, use 1.\\n\" +\n\"Separe centavos com vírgula.\\n\" +\n\"Não escreva nomes como 'item' ou 'valor', apenas os dados.\\n\" +\n\"Exemplo: 09/05/2025:1:cimento:150,00\\n\" +\n\"Dê enter após cada item e não envie relatórios ou explicações.\\n\\n\" +\n\"Frase: \" + $json.prompt\n}}{{ $json.text }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        -40,
        840
      ],
      "id": "93085c3d-a6a7-400c-9b8f-cfa31965cabf",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4",
          "mode": "list",
          "cachedResultName": "gpt-4"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -40,
        980
      ],
      "id": "e6f4d8ca-f624-41bb-b7ff-b0a991cfbd92",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "ZNHzshXHzsGorE8M",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "useCustomSchema": true,
        "operation": "getAll",
        "tableId": "Telegram Obras",
        "returnAll": true,
        "filterType": "none"
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -620,
        840
      ],
      "id": "7e57e415-137d-47d8-a8d4-a3354653cb98",
      "name": "Supabase",
      "credentials": {
        "supabaseApi": {
          "id": "FOa8889BNWkJqL2V",
          "name": "Supabase account 3"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b2afb15d-f1fb-47e3-92d2-2f0deb286d58",
              "name": "prompt",
              "value": "={{ $json.mensagem }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -480,
        840
      ],
      "id": "b2ebb31a-1d31-476a-aad7-8bb793638ed5",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1OT0kFn4XKz4i-kHbRtuhsCRMvvZMVeNxzMHmq4jWr3U",
          "mode": "list",
          "cachedResultName": "Resumo de Obras Ativas",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1OT0kFn4XKz4i-kHbRtuhsCRMvvZMVeNxzMHmq4jWr3U/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 893721588,
          "mode": "list",
          "cachedResultName": "Luana Campo",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1OT0kFn4XKz4i-kHbRtuhsCRMvvZMVeNxzMHmq4jWr3U/edit#gid=893721588"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Data": "={{ $json.Data }}",
            "QTD": "={{ $json.QTD }}",
            "Item": "={{ $json.Item }}",
            "Valor": "={{ $json.Valor }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Data",
              "displayName": "Data",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "QTD",
              "displayName": "QTD",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Item",
              "displayName": "Item",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Valor",
              "displayName": "Valor",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "DATA",
              "displayName": "DATA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Qtd",
              "displayName": "Qtd",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "ITEM",
              "displayName": "ITEM",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": " VALOR ",
              "displayName": " VALOR ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": " TOTAL ",
              "displayName": " TOTAL ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": " R$  223.919,21 ",
              "displayName": " R$  223.919,21 ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Valor",
              "displayName": "Valor",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        440,
        840
      ],
      "id": "289c27da-703a-4395-b034-dbfbce75ea9a",
      "name": "Google Sheets",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "p8FM0Bf0v1V5wjIj",
          "name": "Google Sheets account 2"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.from.id }}",
        "text": "De qual obra são esses gastos?",
        "replyMarkup": "inlineKeyboard",
        "inlineKeyboard": {
          "rows": [
            {
              "row": {
                "buttons": [
                  {
                    "text": "Luana Campo",
                    "additionalFields": {
                      "callback_data": "1"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Luana 2 Casas",
                    "additionalFields": {
                      "callback_data": "2"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Dinha",
                    "additionalFields": {
                      "callback_data": "3"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Josivam Oasis",
                    "additionalFields": {
                      "callback_data": "4"
                    }
                  }
                ]
              }
            },
            {
              "row": {
                "buttons": [
                  {
                    "text": "Jardim Gonzaga",
                    "additionalFields": {
                      "callback_data": "5"
                    }
                  }
                ]
              }
            }
          ]
        },
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1040,
        -280
      ],
      "id": "3edfc0ff-309c-425c-8ce5-d4a9e0889f60",
      "name": "Telegram",
      "webhookId": "438b8494-179a-4f63-8999-19f1527149d9",
      "credentials": {
        "telegramApi": {
          "id": "i8d2rkdqx5SZfhen",
          "name": "Telegram account 2"
        }
      }
    },
    {
      "parameters": {
        "useCustomSchema": true,
        "tableId": "Telegram Obras",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "mensagem",
              "fieldValue": "={{ $('Merge').item.json.linhas }}{{ $('Merge').item.json.text }}{{ $('Merge').item.json.message.text }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        1220,
        -280
      ],
      "id": "3f13b8e0-021b-453e-a8d2-f0d86b49717b",
      "name": "Supabase1",
      "credentials": {
        "supabaseApi": {
          "id": "FOa8889BNWkJqL2V",
          "name": "Supabase account 3"
        }
      }
    },
    {
      "parameters": {
        "updates": [
          "message",
          "callback_query"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        -2420,
        160
      ],
      "id": "710ecb2b-4472-47ac-92ae-8ca9b4cca333",
      "name": "Telegram Trigger",
      "webhookId": "6e022020-d348-4d7a-8897-bd3ac72f8143",
      "credentials": {
        "telegramApi": {
          "id": "i8d2rkdqx5SZfhen",
          "name": "Telegram account 2"
        }
      }
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "data_hoje",
              "value": "={{ $now.toFormat('dd/MM/yyyy') }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Set Data Hoje",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -240,
        840
      ],
      "id": "f899da9e-ced0-4a87-91a3-4b39a74d1787"
    },
    {
      "parameters": {
        "operation": "delete",
        "tableId": "Telegram Obras",
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "condition": "gt",
              "keyValue": "0"
            }
          ]
        }
      },
      "name": "Apagar Supabase",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        600,
        840
      ],
      "id": "7372759c-e9d1-4be0-81a2-d3fdd34bb14e",
      "credentials": {
        "supabaseApi": {
          "id": "FOa8889BNWkJqL2V",
          "name": "Supabase account 3"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const resultados = [];\n\n// Usa apenas o primeiro item da lista (evita repetições quando há 2 ou mais)\nconst texto = items[0].json.output || items[0].json.message?.content || '';\n\n// Divide por linha e remove vazios\nconst linhas = texto.split('\\n').filter(l => l.trim() !== '');\n\nfor (const linha of linhas) {\n  const partes = linha.split(':');\n\n  if (partes.length === 4) {\n    resultados.push({\n      json: {\n        Data: partes[0].trim(),\n        QTD: partes[1].trim(),\n        Item: partes[2].trim(),\n        Valor: partes[3].trim()\n      }\n    });\n  }\n}\n\nreturn resultados;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        280,
        840
      ],
      "id": "a55e1d14-323a-4008-95a5-0529d85afa43",
      "name": "Code"
    },
    {
      "parameters": {
        "chatId": "793639141",
        "text": "Planilha preenchida com sucesso ✅",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        760,
        840
      ],
      "id": "8bebddc2-98dd-4d78-a202-ec7cb28dfcd7",
      "name": "Telegram1",
      "webhookId": "c07830fc-69ee-4cc7-89b3-ee3d4903af15",
      "credentials": {
        "telegramApi": {
          "id": "i8d2rkdqx5SZfhen",
          "name": "Telegram account 2"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.photo[3].file_id }}"
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -860,
        -800
      ],
      "id": "87d923df-b10c-4984-a545-8d0d53fd6423",
      "name": "Telegram2",
      "webhookId": "1936516e-482d-4a4c-b71e-fa1f5354ddc7",
      "credentials": {
        "telegramApi": {
          "id": "i8d2rkdqx5SZfhen",
          "name": "Telegram account 2"
        }
      }
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "GPT-4O"
        },
        "text": "=Extraia todos os produtos e itens listados no texto abaixo.\n\nRegras:\n1. Cada produto pode estar em uma ou duas linhas consecutivas.\n2. Quando houver duas linhas para o mesmo produto, a segunda linha sempre contém o valor total correto.\n3. Se a segunda linha contiver mais de um valor em formato de dinheiro (ex: R$15,00, R$180,00), o valor do item é sempre o **último valor monetário da linha**.\n4. Sempre utilize esse último valor da segunda linha como o valor final do item.\n5. Pegue a quantidade da coluna “Qtde”, “Qtde UN” ou “QTD”. Se não houver, use 1.\n6. Pegue o nome do produto da primeira linha (ou das duas juntas, se estiverem divididas).\n7. Pegue a data do comprovante, se houver. Caso não tenha, use a data atual.\n8. Retorne os itens no seguinte formato, um por linha:\n   data:quantidade:item:valor\n\n9. Se houver um valor total da nota (como \"TOTAL\", \"TOTAL DOS PRODUTOS\", \"TOTAL LIQUIDO\", \"TOTAL GERAL\", etc.), capture esse valor e escreva no fim com este formato:\n   **Total da nota: R$X.XXX,XX**\n\nAtenção:\n- O valor considerado válido de cada item é sempre o **último valor em formato de dinheiro da linha inferior**.\n- Não adicione explicações.\n- Apenas retorne os dados formatados conforme acima.",
        "inputType": "base64",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -580,
        -800
      ],
      "id": "7782146b-bfa8-4142-bdb6-5d4b490223e9",
      "name": "OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "ZNHzshXHzsGorE8M",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "operation": "composite",
        "dataPropertyNameComposite": "data",
        "options": {}
      },
      "type": "n8n-nodes-base.editImage",
      "typeVersion": 1,
      "position": [
        -720,
        -800
      ],
      "id": "71ea0c6d-4e00-4419-bb85-9233b6c50782",
      "name": "Edit Image"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.photo[0].file_id }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "notEmpty",
                      "singleValue": true
                    },
                    "id": "c2c3ad01-4984-461a-970d-5a323bb4e038"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "92bfc767-3293-481f-91f0-db79108cc542",
                    "leftValue": "={{ $json.message.document.file_name }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "notEmpty",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "7b84cb0c-943f-486a-b36c-8b859292e240",
                    "leftValue": "={{ $json.message.voice.file_id }}",
                    "rightValue": "={{ $json.callback_query.data }}",
                    "operator": {
                      "type": "string",
                      "operation": "notEmpty",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "ca518bc5-9371-49c0-afa1-b7db6710f717",
                    "leftValue": "={{ $json.message.text }}{{ $('Telegram Trigger').item.json.message.text }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "notEmpty",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "30d5ff10-6175-488f-ae35-bcfc9570b614",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "notEmpty",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -1800,
        120
      ],
      "id": "007249de-ff91-4c18-bb93-1f3796ecae28",
      "name": "Switch2"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "7dbf4796-c009-4316-93ea-2e0f3345b88f",
                    "leftValue": "={{ $json.erro }}",
                    "rightValue": "Erro na soma",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "76626e31-a8f5-42e9-a354-988661d9d017",
                    "leftValue": "={{ $json.erro }}",
                    "rightValue": "=Erro na soma",
                    "operator": {
                      "type": "string",
                      "operation": "notContains"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        120,
        -640
      ],
      "id": "073dfb36-c5ad-4b7f-8ca8-eb724aa83cfb",
      "name": "Switch3"
    },
    {
      "parameters": {
        "jsCode": "const linhas = items[0].json.content.split('\\n');\nlet soma = 0;\nlet totalNota = 0;\n\nfor (let linha of linhas) {\n  const partes = linha.split(':');\n  const valorStr = partes[3]?.replace('.', '').replace(',', '.');\n  \n  // Soma os valores das linhas válidas\n  if (partes.length === 4 && !isNaN(parseFloat(valorStr))) {\n    soma += parseFloat(valorStr);\n  }\n\n  // Tenta detectar total com base em palavras comuns\n  if (\n    linha.toLowerCase().includes('total') ||\n    linha.toLowerCase().includes('líquido') ||\n    linha.toLowerCase().includes('geral') ||\n    linha.toLowerCase().includes('produtos')\n  ) {\n    const match = linha.match(/([\\d.]+,\\d{2})/g);\n    if (match) {\n      const ultimo = match[match.length - 1];\n      totalNota = parseFloat(ultimo.replace('.', '').replace(',', '.'));\n    }\n  }\n}\n\n// Se ainda não achou o total, tenta o último valor numérico da última linha\nif (totalNota === 0 && linhas.length > 0) {\n  const ultima = linhas[linhas.length - 1];\n  const match = ultima.match(/([\\d.]+,\\d{2})$/);\n  if (match) {\n    totalNota = parseFloat(match[1].replace('.', '').replace(',', '.'));\n  }\n}\n\n// Verificação da soma\nif (Math.abs(soma - totalNota) < 0.01) {\n  return [{ json: { validado: true, linhas: linhas.join('\\n') } }];\n} else {\n  return [{ json: { validado: false, erro: 'Erro na soma dos produtos' } }];\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -420,
        -800
      ],
      "id": "5e0a8e9a-570e-4e27-a84b-10300ae5f4a9",
      "name": "Code1"
    },
    {
      "parameters": {
        "numberInputs": 4
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        660,
        160
      ],
      "id": "6731c4b0-ca56-46df-98f0-afb0bcbcb274",
      "name": "Merge"
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.document.file_id }}"
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -1020,
        -340
      ],
      "id": "8d6d4f2c-42e9-422c-8e5f-eb182768187a",
      "name": "Telegram4",
      "webhookId": "bf4ccc42-cbba-47c1-8fce-084aeb33a3f5",
      "credentials": {
        "telegramApi": {
          "id": "i8d2rkdqx5SZfhen",
          "name": "Telegram account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -880,
        -340
      ],
      "id": "9e6dbbe1-8b52-4ed7-8a2f-c47825bd42a8",
      "name": "Extract from File"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "chatgpt-4o-latest",
          "mode": "list",
          "cachedResultName": "CHATGPT-4O-LATEST"
        },
        "messages": {
          "values": [
            {
              "content": "=Extraia do texto abaixo os produtos com as seguintes regras:\n\n1. Cada item pode ocupar uma ou duas linhas.\n2. Quando houver duas linhas, o valor do produto estará sempre na última linha, sendo o último número em formato de dinheiro (ex: R$123,45).\n3. Use sempre esse último valor como o total do produto.\n4. A quantidade estará em colunas identificadas como Qtde, QTD ou QTDE. Se não tiver, considere quantidade 1.\n5. O nome do item pode vir da primeira linha ou ser formado por duas linhas.\n6. Capture a data, caso esteja no texto. Se não estiver, use a data atual.\n7. Retorne os dados no seguinte formato, um item por linha:\n\ndata:quantidade:produto:valor\n\nNo final, se houver o valor total da nota (como “TOTAL”, “TOTAL GERAL”, “TOTAL LIQUIDO”), escreva com este formato:\n\nTotal da nota: R$X.XXX,XX\n\nTexto:  \n{{ $json.text }}\n"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -740,
        -340
      ],
      "id": "d93017e7-1df9-432a-a3ab-8e83f05c5148",
      "name": "OpenAI1",
      "credentials": {
        "openAiApi": {
          "id": "ZNHzshXHzsGorE8M",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const texto = $input.first().json.message.content;\nconst linhas = texto.split('\\n');\n\nlet soma = 0;\nlet totalNota = 0;\nlet linhasValidas = [];\n\nfor (let linha of linhas) {\n  // Procura valor do produto em formato R$123,45\n  const matchValor = linha.match(/R\\$\\d{1,3}(?:\\.\\d{3})*,\\d{2}/g);\n  if (matchValor) {\n    const ultimoValor = matchValor[matchValor.length - 1];\n    const valorNumerico = parseFloat(ultimoValor.replace('R$', '').replace('.', '').replace(',', '.'));\n\n    // Se a linha não for a do total, soma\n    if (!linha.toLowerCase().includes('total')) {\n      soma += valorNumerico;\n      linhasValidas.push(linha);\n    } else {\n      totalNota = valorNumerico;\n    }\n  }\n}\n\n// Validação\nif (Math.abs(soma - totalNota) < 0.01) {\n  return [{ json: { validado: true, linhas: linhasValidas.join('\\n') } }];\n} else {\n  return [{\n    json: {\n      validado: false,\n      erro: `Erro na soma dos produtos: soma ${soma.toFixed(2)}, total ${totalNota.toFixed(2)}`\n    }\n  }];\n}\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -460,
        -340
      ],
      "id": "9183a090-0616-43a6-8552-a7b6f284d7f2",
      "name": "Code2"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.linhas }}",
                    "rightValue": "Erro na soma",
                    "operator": {
                      "type": "string",
                      "operation": "notContains"
                    },
                    "id": "2bf576fa-300d-43b8-a890-47c9f3634037"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "9c335fac-ae09-432a-b03f-07ca65af9110",
                    "leftValue": "={{ $json.linhas }}",
                    "rightValue": "Erro na soma",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -320,
        -340
      ],
      "id": "f7a6b303-4cac-4aaa-899d-57fa2d403a25",
      "name": "Switch4"
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.voice.file_id }}"
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -980,
        -40
      ],
      "id": "b835cc1c-72c2-4e9b-b9ef-c9383f723e78",
      "name": "Telegram7",
      "webhookId": "207229b2-496b-455c-b962-a6e45e3ce06a",
      "credentials": {
        "telegramApi": {
          "id": "i8d2rkdqx5SZfhen",
          "name": "Telegram account 2"
        }
      }
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -760,
        -40
      ],
      "id": "00472a14-a7d2-42bd-b6ec-7993789302ed",
      "name": "OpenAI2",
      "credentials": {
        "openAiApi": {
          "id": "ZNHzshXHzsGorE8M",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "793639141",
        "text": "Os valores retirados estão divergentes ❌",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -120,
        -200
      ],
      "id": "83c71311-2ffa-4962-afdd-86687b122cd8",
      "name": "Mensagem Erro pdf",
      "webhookId": "7f09b362-d50d-475d-9c3e-7387060b5e94",
      "credentials": {
        "telegramApi": {
          "id": "i8d2rkdqx5SZfhen",
          "name": "Telegram account 2"
        }
      }
    },
    {
      "parameters": {
        "chatId": "793639141",
        "text": "Os valores retirados estão divergentes ❌",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        440,
        -940
      ],
      "id": "a81798ae-92d6-49c8-972e-71ce70d51a88",
      "name": "Mensagem Erro Foto",
      "webhookId": "7f09b362-d50d-475d-9c3e-7387060b5e94",
      "credentials": {
        "telegramApi": {
          "id": "i8d2rkdqx5SZfhen",
          "name": "Telegram account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "tableId": "Telegram Obras",
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "condition": "gt",
              "keyValue": "0"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -2100,
        -600
      ],
      "id": "17528afc-974b-4301-b801-b5e65a847c4e",
      "name": "Deletar planilha",
      "credentials": {
        "supabaseApi": {
          "id": "FOa8889BNWkJqL2V",
          "name": "Supabase account 3"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{\n\"Transforme todos os produtos encontrados na frase abaixo em linhas separadas, cada uma no formato: data:quantidade:item:valor.\\n\" +\n\"Se não vier data na mensagem, use essa data: \" + $('Set Data Hoje1').item.json.data_hoje + \".\\n\" +\n\"Se não houver quantidade, use 1.\\n\" +\n\"Separe centavos com vírgula.\\n\" +\n\"Não escreva nomes como 'item' ou 'valor', apenas os dados.\\n\" +\n\"Exemplo: 09/05/2025:1:cimento:150,00\\n\" +\n\"Dê enter após cada item e não envie relatórios ou explicações.\\n\\n\" +\n\"Frase: \" + $json.prompt\n}}{{ $json.text }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        -40,
        1120
      ],
      "id": "f1dbb875-21d1-49c4-8095-e6bdf8310e9b",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4",
          "mode": "list",
          "cachedResultName": "gpt-4"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -40,
        1260
      ],
      "id": "6ab09acb-e2b1-4418-a40a-a31532dac396",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "ZNHzshXHzsGorE8M",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "useCustomSchema": true,
        "operation": "getAll",
        "tableId": "Telegram Obras",
        "returnAll": true,
        "filterType": "none"
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -620,
        1120
      ],
      "id": "70932e2b-5cb2-4ebd-bd53-245b0b88038e",
      "name": "Supabase2",
      "credentials": {
        "supabaseApi": {
          "id": "FOa8889BNWkJqL2V",
          "name": "Supabase account 3"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b2afb15d-f1fb-47e3-92d2-2f0deb286d58",
              "name": "prompt",
              "value": "={{ $json.mensagem }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -480,
        1120
      ],
      "id": "efe3cb0b-85eb-41a0-b72b-e20eaff04fcd",
      "name": "Edit Fields2"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1OT0kFn4XKz4i-kHbRtuhsCRMvvZMVeNxzMHmq4jWr3U",
          "mode": "list",
          "cachedResultName": "Resumo de Obras Ativas",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1OT0kFn4XKz4i-kHbRtuhsCRMvvZMVeNxzMHmq4jWr3U/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 2027519787,
          "mode": "list",
          "cachedResultName": "Luana 2 Casas",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1OT0kFn4XKz4i-kHbRtuhsCRMvvZMVeNxzMHmq4jWr3U/edit#gid=2027519787"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Data": "={{ $json.Data }}",
            "QTD": "={{ $json.QTD }}",
            "Item": "={{ $json.Item }}",
            " Valor ": "={{ $json.Valor }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Data",
              "displayName": "Data",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "QTD",
              "displayName": "QTD",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Item",
              "displayName": "Item",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": " Valor ",
              "displayName": " Valor ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "DATA",
              "displayName": "DATA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Qtd",
              "displayName": "Qtd",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "ITEM",
              "displayName": "ITEM",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": " VALOR ",
              "displayName": " VALOR ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        440,
        1120
      ],
      "id": "bf19a2c2-fe7b-44ec-8db0-2f45ca1c2f92",
      "name": "Google Sheets1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "p8FM0Bf0v1V5wjIj",
          "name": "Google Sheets account 2"
        }
      }
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "data_hoje",
              "value": "={{ $now.toFormat('dd/MM/yyyy') }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Set Data Hoje1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -240,
        1120
      ],
      "id": "b254fb9a-86ec-4266-b7be-2563bca6f795"
    },
    {
      "parameters": {
        "operation": "delete",
        "tableId": "Telegram Obras",
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "condition": "gt",
              "keyValue": "0"
            }
          ]
        }
      },
      "name": "Apagar Supabase1",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        600,
        1120
      ],
      "id": "cf40e61c-6c16-4c41-b309-6be311e9065c",
      "credentials": {
        "supabaseApi": {
          "id": "FOa8889BNWkJqL2V",
          "name": "Supabase account 3"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const resultados = [];\n\n// Usa apenas o primeiro item da lista (evita repetições quando há 2 ou mais)\nconst texto = items[0].json.output || items[0].json.message?.content || '';\n\n// Divide por linha e remove vazios\nconst linhas = texto.split('\\n').filter(l => l.trim() !== '');\n\nfor (const linha of linhas) {\n  const partes = linha.split(':');\n\n  if (partes.length === 4) {\n    resultados.push({\n      json: {\n        Data: partes[0].trim(),\n        QTD: partes[1].trim(),\n        Item: partes[2].trim(),\n        Valor: partes[3].trim()\n      }\n    });\n  }\n}\n\nreturn resultados;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        280,
        1120
      ],
      "id": "ae6fc269-e04f-4a96-bba5-6ea24951763d",
      "name": "Code3"
    },
    {
      "parameters": {
        "chatId": "793639141",
        "text": "Planilha preenchida com sucesso ✅",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        760,
        1120
      ],
      "id": "065aaad3-83c8-4f06-80a5-31982fa91966",
      "name": "Telegram3",
      "webhookId": "c07830fc-69ee-4cc7-89b3-ee3d4903af15",
      "credentials": {
        "telegramApi": {
          "id": "i8d2rkdqx5SZfhen",
          "name": "Telegram account 2"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{\n\"Transforme todos os produtos encontrados na frase abaixo em linhas separadas, cada uma no formato: data:quantidade:item:valor.\\n\" +\n\"Se não vier data na mensagem, use essa data: \" + $('Set Data Hoje2').item.json.data_hoje + \".\\n\" +\n\"Se não houver quantidade, use 1.\\n\" +\n\"Separe centavos com vírgula.\\n\" +\n\"Não escreva nomes como 'item' ou 'valor', apenas os dados.\\n\" +\n\"Exemplo: 09/05/2025:1:cimento:150,00\\n\" +\n\"Dê enter após cada item e não envie relatórios ou explicações.\\n\\n\" +\n\"Frase: \" + $json.prompt\n}}{{ $json.text }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        -40,
        1400
      ],
      "id": "9e26c773-9ed6-47ef-aea3-165be13e1653",
      "name": "AI Agent2"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4",
          "mode": "list",
          "cachedResultName": "gpt-4"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -40,
        1560
      ],
      "id": "88d021db-7a6c-4eb9-a7b0-73cee485a78e",
      "name": "OpenAI Chat Model2",
      "credentials": {
        "openAiApi": {
          "id": "ZNHzshXHzsGorE8M",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "useCustomSchema": true,
        "operation": "getAll",
        "tableId": "Telegram Obras",
        "returnAll": true,
        "filterType": "none"
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -620,
        1400
      ],
      "id": "1cdb925c-8457-4b87-829d-011949db300b",
      "name": "Supabase3",
      "credentials": {
        "supabaseApi": {
          "id": "FOa8889BNWkJqL2V",
          "name": "Supabase account 3"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b2afb15d-f1fb-47e3-92d2-2f0deb286d58",
              "name": "prompt",
              "value": "={{ $json.mensagem }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -480,
        1400
      ],
      "id": "8efe43f4-7a57-4153-8258-4a7ff87d0211",
      "name": "Edit Fields4"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1OT0kFn4XKz4i-kHbRtuhsCRMvvZMVeNxzMHmq4jWr3U",
          "mode": "list",
          "cachedResultName": "Resumo de Obras Ativas",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1OT0kFn4XKz4i-kHbRtuhsCRMvvZMVeNxzMHmq4jWr3U/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1601561706,
          "mode": "list",
          "cachedResultName": "Dinha",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1OT0kFn4XKz4i-kHbRtuhsCRMvvZMVeNxzMHmq4jWr3U/edit#gid=1601561706"
        },
        "columns": {
          "mappingMode": "autoMapInputData",
          "value": {},
          "matchingColumns": [],
          "schema": [
            {
              "id": "Data",
              "displayName": "Data",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "QTD",
              "displayName": "QTD",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Item",
              "displayName": "Item",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": " Valor ",
              "displayName": " Valor ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "TOTAL",
              "displayName": "TOTAL",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "R$ 76.411,89",
              "displayName": "R$ 76.411,89",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "DATA",
              "displayName": "DATA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Qtd",
              "displayName": "Qtd",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "ITEM",
              "displayName": "ITEM",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": " VALOR ",
              "displayName": " VALOR ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": " TOTAL ",
              "displayName": " TOTAL ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": " R$  -   ",
              "displayName": " R$  -   ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        440,
        1400
      ],
      "id": "c2b601b0-1c0c-4d44-a013-26a13c8eee5d",
      "name": "Google Sheets2",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "p8FM0Bf0v1V5wjIj",
          "name": "Google Sheets account 2"
        }
      }
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "data_hoje",
              "value": "={{ $now.toFormat('dd/MM/yyyy') }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Set Data Hoje2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -240,
        1400
      ],
      "id": "defac0e1-3842-4f44-b169-3a3f949a0e01"
    },
    {
      "parameters": {
        "operation": "delete",
        "tableId": "Telegram Obras",
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "condition": "gt",
              "keyValue": "0"
            }
          ]
        }
      },
      "name": "Apagar Supabase2",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        600,
        1400
      ],
      "id": "14942a96-1411-42e1-9362-8388dbcfbaf7",
      "credentials": {
        "supabaseApi": {
          "id": "FOa8889BNWkJqL2V",
          "name": "Supabase account 3"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const resultados = [];\n\n// Usa apenas o primeiro item da lista (evita repetições quando há 2 ou mais)\nconst texto = items[0].json.output || items[0].json.message?.content || '';\n\n// Divide por linha e remove vazios\nconst linhas = texto.split('\\n').filter(l => l.trim() !== '');\n\nfor (const linha of linhas) {\n  const partes = linha.split(':');\n\n  if (partes.length === 4) {\n    resultados.push({\n      json: {\n        Data: partes[0].trim(),\n        QTD: partes[1].trim(),\n        Item: partes[2].trim(),\n        Valor: partes[3].trim()\n      }\n    });\n  }\n}\n\nreturn resultados;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        280,
        1400
      ],
      "id": "efaeaa6c-7dd9-4f1b-828a-a4109715fff7",
      "name": "Code4"
    },
    {
      "parameters": {
        "chatId": "793639141",
        "text": "Planilha preenchida com sucesso ✅",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        760,
        1400
      ],
      "id": "a7b33ae2-ddae-459c-9a68-280d71b20044",
      "name": "Telegram5",
      "webhookId": "c07830fc-69ee-4cc7-89b3-ee3d4903af15",
      "credentials": {
        "telegramApi": {
          "id": "i8d2rkdqx5SZfhen",
          "name": "Telegram account 2"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{\n\"Transforme todos os produtos encontrados na frase abaixo em linhas separadas, cada uma no formato: data:quantidade:item:valor.\\n\" +\n\"Se não vier data na mensagem, use essa data: \" + $('Set Data Hoje3').item.json.data_hoje + \".\\n\" +\n\"Se não houver quantidade, use 1.\\n\" +\n\"Separe centavos com vírgula.\\n\" +\n\"Não escreva nomes como 'item' ou 'valor', apenas os dados.\\n\" +\n\"Exemplo: 09/05/2025:1:cimento:150,00\\n\" +\n\"Dê enter após cada item e não envie relatórios ou explicações.\\n\\n\" +\n\"Frase: \" + $json.prompt\n}}{{ $json.text }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        -40,
        1700
      ],
      "id": "bb5d68fc-4461-45d2-9012-b6ef8625034b",
      "name": "AI Agent3"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4",
          "mode": "list",
          "cachedResultName": "gpt-4"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -40,
        1860
      ],
      "id": "1cf4fdf0-fd51-4dde-b7b3-36c6f55db848",
      "name": "OpenAI Chat Model3",
      "credentials": {
        "openAiApi": {
          "id": "ZNHzshXHzsGorE8M",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "useCustomSchema": true,
        "operation": "getAll",
        "tableId": "Telegram Obras",
        "returnAll": true,
        "filterType": "none"
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -620,
        1700
      ],
      "id": "c8b9d875-4261-43aa-bffe-dd71a1e90507",
      "name": "Supabase4",
      "credentials": {
        "supabaseApi": {
          "id": "FOa8889BNWkJqL2V",
          "name": "Supabase account 3"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b2afb15d-f1fb-47e3-92d2-2f0deb286d58",
              "name": "prompt",
              "value": "={{ $json.mensagem }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -480,
        1700
      ],
      "id": "021c0f8d-1641-4ae9-a5e6-6ef6f52558b5",
      "name": "Edit Fields6"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1OT0kFn4XKz4i-kHbRtuhsCRMvvZMVeNxzMHmq4jWr3U",
          "mode": "list",
          "cachedResultName": "Resumo de Obras Ativas",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1OT0kFn4XKz4i-kHbRtuhsCRMvvZMVeNxzMHmq4jWr3U/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1261578512,
          "mode": "list",
          "cachedResultName": "Josivam Oasis",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1OT0kFn4XKz4i-kHbRtuhsCRMvvZMVeNxzMHmq4jWr3U/edit#gid=1261578512"
        },
        "columns": {
          "mappingMode": "autoMapInputData",
          "value": {},
          "matchingColumns": [],
          "schema": [
            {
              "id": "Data",
              "displayName": "Data",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "QTD",
              "displayName": "QTD",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Item",
              "displayName": "Item",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Valor",
              "displayName": "Valor",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "DATA",
              "displayName": "DATA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Qtd",
              "displayName": "Qtd",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "ITEM",
              "displayName": "ITEM",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": " VALOR ",
              "displayName": " VALOR ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        440,
        1700
      ],
      "id": "ba752258-597e-49e7-834b-07de43d4d07c",
      "name": "Google Sheets3",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "p8FM0Bf0v1V5wjIj",
          "name": "Google Sheets account 2"
        }
      }
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "data_hoje",
              "value": "={{ $now.toFormat('dd/MM/yyyy') }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Set Data Hoje3",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -240,
        1700
      ],
      "id": "bd9a5812-0276-4630-bd95-d9f5db90c69b"
    },
    {
      "parameters": {
        "operation": "delete",
        "tableId": "Telegram Obras",
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "condition": "gt",
              "keyValue": "0"
            }
          ]
        }
      },
      "name": "Apagar Supabase3",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        600,
        1700
      ],
      "id": "1958dea3-0e7d-4a20-9ada-48d2fd978df1",
      "credentials": {
        "supabaseApi": {
          "id": "FOa8889BNWkJqL2V",
          "name": "Supabase account 3"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const resultados = [];\n\n// Usa apenas o primeiro item da lista (evita repetições quando há 2 ou mais)\nconst texto = items[0].json.output || items[0].json.message?.content || '';\n\n// Divide por linha e remove vazios\nconst linhas = texto.split('\\n').filter(l => l.trim() !== '');\n\nfor (const linha of linhas) {\n  const partes = linha.split(':');\n\n  if (partes.length === 4) {\n    resultados.push({\n      json: {\n        Data: partes[0].trim(),\n        QTD: partes[1].trim(),\n        Item: partes[2].trim(),\n        Valor: partes[3].trim()\n      }\n    });\n  }\n}\n\nreturn resultados;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        280,
        1700
      ],
      "id": "3b079503-8adb-4223-bbc7-b71b5bc1fbf8",
      "name": "Code5"
    },
    {
      "parameters": {
        "chatId": "793639141",
        "text": "Planilha preenchida com sucesso ✅",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        760,
        1700
      ],
      "id": "be4169b1-40f7-4854-ba02-653d7763d054",
      "name": "Telegram6",
      "webhookId": "c07830fc-69ee-4cc7-89b3-ee3d4903af15",
      "credentials": {
        "telegramApi": {
          "id": "i8d2rkdqx5SZfhen",
          "name": "Telegram account 2"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{\n\"Transforme todos os produtos encontrados na frase abaixo em linhas separadas, cada uma no formato: data:quantidade:item:valor.\\n\" +\n\"Se não vier data na mensagem, use essa data: \" + $('Set Data Hoje4').item.json.data_hoje + \".\\n\" +\n\"Se não houver quantidade, use 1.\\n\" +\n\"Separe centavos com vírgula.\\n\" +\n\"Não escreva nomes como 'item' ou 'valor', apenas os dados.\\n\" +\n\"Exemplo: 09/05/2025:1:cimento:150,00\\n\" +\n\"Dê enter após cada item e não envie relatórios ou explicações.\\n\\n\" +\n\"Frase: \" + $json.prompt\n}}{{ $json.text }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        -40,
        2000
      ],
      "id": "388afe53-cb48-4c78-a750-4159fb051472",
      "name": "AI Agent4"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4",
          "mode": "list",
          "cachedResultName": "gpt-4"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -40,
        2160
      ],
      "id": "9b5186d0-a1db-4c1f-8a6b-52e37123a28b",
      "name": "OpenAI Chat Model4",
      "credentials": {
        "openAiApi": {
          "id": "ZNHzshXHzsGorE8M",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "useCustomSchema": true,
        "operation": "getAll",
        "tableId": "Telegram Obras",
        "returnAll": true,
        "filterType": "none"
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -620,
        2000
      ],
      "id": "59549a1a-b4e9-4d7e-8556-1ff31d43875e",
      "name": "Supabase5",
      "credentials": {
        "supabaseApi": {
          "id": "FOa8889BNWkJqL2V",
          "name": "Supabase account 3"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b2afb15d-f1fb-47e3-92d2-2f0deb286d58",
              "name": "prompt",
              "value": "={{ $json.mensagem }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -480,
        2000
      ],
      "id": "fa051c7c-5119-4bb7-b351-223ad85a1b84",
      "name": "Edit Fields8"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1OT0kFn4XKz4i-kHbRtuhsCRMvvZMVeNxzMHmq4jWr3U",
          "mode": "list",
          "cachedResultName": "Resumo de Obras Ativas",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1OT0kFn4XKz4i-kHbRtuhsCRMvvZMVeNxzMHmq4jWr3U/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 312038359,
          "mode": "list",
          "cachedResultName": "Jardim Gonzaga",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1OT0kFn4XKz4i-kHbRtuhsCRMvvZMVeNxzMHmq4jWr3U/edit#gid=312038359"
        },
        "columns": {
          "mappingMode": "autoMapInputData",
          "value": {},
          "matchingColumns": [],
          "schema": [
            {
              "id": "Data",
              "displayName": "Data",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "QTD",
              "displayName": "QTD",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Item",
              "displayName": "Item",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Valor",
              "displayName": "Valor",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "DATA",
              "displayName": "DATA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Qtd",
              "displayName": "Qtd",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "ITEM",
              "displayName": "ITEM",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": " VALOR ",
              "displayName": " VALOR ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        440,
        2000
      ],
      "id": "f139b0c5-bb9e-4cd2-8052-260b6a9d71e6",
      "name": "Google Sheets4",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "p8FM0Bf0v1V5wjIj",
          "name": "Google Sheets account 2"
        }
      }
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "data_hoje",
              "value": "={{ $now.toFormat('dd/MM/yyyy') }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Set Data Hoje4",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -240,
        2000
      ],
      "id": "b2198dbe-0fad-4db1-8c9b-dd17fdadd04c"
    },
    {
      "parameters": {
        "operation": "delete",
        "tableId": "Telegram Obras",
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "condition": "gt",
              "keyValue": "0"
            }
          ]
        }
      },
      "name": "Apagar Supabase4",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        600,
        2000
      ],
      "id": "83d19126-45d2-4c1e-b99e-8d0984417099",
      "credentials": {
        "supabaseApi": {
          "id": "FOa8889BNWkJqL2V",
          "name": "Supabase account 3"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const resultados = [];\n\n// Usa apenas o primeiro item da lista (evita repetições quando há 2 ou mais)\nconst texto = items[0].json.output || items[0].json.message?.content || '';\n\n// Divide por linha e remove vazios\nconst linhas = texto.split('\\n').filter(l => l.trim() !== '');\n\nfor (const linha of linhas) {\n  const partes = linha.split(':');\n\n  if (partes.length === 4) {\n    resultados.push({\n      json: {\n        Data: partes[0].trim(),\n        QTD: partes[1].trim(),\n        Item: partes[2].trim(),\n        Valor: partes[3].trim()\n      }\n    });\n  }\n}\n\nreturn resultados;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        280,
        2000
      ],
      "id": "2a7be7c2-efc9-4ffb-a4c1-5c1a9b0ae5be",
      "name": "Code6"
    },
    {
      "parameters": {
        "chatId": "793639141",
        "text": "Planilha preenchida com sucesso ✅",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        760,
        2000
      ],
      "id": "3502ef5b-1769-4502-95cb-21e0ebc01289",
      "name": "Telegram8",
      "webhookId": "c07830fc-69ee-4cc7-89b3-ee3d4903af15",
      "credentials": {
        "telegramApi": {
          "id": "i8d2rkdqx5SZfhen",
          "name": "Telegram account 2"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "empty",
                      "singleValue": true
                    },
                    "id": "10cc443c-8505-443d-afa0-5746c0f8791e"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "52d11ef7-8929-4e3e-84ed-a4966980deb1",
                    "leftValue": "={{ $json.callback_query.data }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "notEmpty",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -2200,
        160
      ],
      "id": "bc8eaaf1-6760-45c7-8837-ad675d0af30f",
      "name": "Switch1"
    }
  ],
  "pinData": {},
  "connections": {
    "Switch": {
      "main": [
        [
          {
            "node": "Supabase",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Supabase2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Supabase3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Supabase4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Supabase5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Supabase": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Set Data Hoje",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram": {
      "main": [
        [
          {
            "node": "Supabase1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets": {
      "main": [
        [
          {
            "node": "Apagar Supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Data Hoje": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase1": {
      "main": [
        []
      ]
    },
    "Apagar Supabase": {
      "main": [
        [
          {
            "node": "Telegram1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram2": {
      "main": [
        [
          {
            "node": "Edit Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Image": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch2": {
      "main": [
        [
          {
            "node": "Telegram2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram7",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 3
          }
        ],
        []
      ]
    },
    "Switch3": {
      "main": [
        [
          {
            "node": "Mensagem Erro Foto",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Switch3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram4": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "OpenAI1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI1": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "Switch4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch4": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "Mensagem Erro pdf",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram7": {
      "main": [
        [
          {
            "node": "OpenAI2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI2": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "Code3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Supabase2": {
      "main": [
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "Set Data Hoje1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets1": {
      "main": [
        [
          {
            "node": "Apagar Supabase1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Data Hoje1": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Apagar Supabase1": {
      "main": [
        [
          {
            "node": "Telegram3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code3": {
      "main": [
        [
          {
            "node": "Google Sheets1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent2": {
      "main": [
        [
          {
            "node": "Code4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent2",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Supabase3": {
      "main": [
        [
          {
            "node": "Edit Fields4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields4": {
      "main": [
        [
          {
            "node": "Set Data Hoje2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets2": {
      "main": [
        [
          {
            "node": "Apagar Supabase2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Data Hoje2": {
      "main": [
        [
          {
            "node": "AI Agent2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Apagar Supabase2": {
      "main": [
        [
          {
            "node": "Telegram5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code4": {
      "main": [
        [
          {
            "node": "Google Sheets2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent3": {
      "main": [
        [
          {
            "node": "Code5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent3",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Supabase4": {
      "main": [
        [
          {
            "node": "Edit Fields6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields6": {
      "main": [
        [
          {
            "node": "Set Data Hoje3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets3": {
      "main": [
        [
          {
            "node": "Apagar Supabase3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Data Hoje3": {
      "main": [
        [
          {
            "node": "AI Agent3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Apagar Supabase3": {
      "main": [
        [
          {
            "node": "Telegram6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code5": {
      "main": [
        [
          {
            "node": "Google Sheets3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent4": {
      "main": [
        [
          {
            "node": "Code6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model4": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent4",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Supabase5": {
      "main": [
        [
          {
            "node": "Edit Fields8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields8": {
      "main": [
        [
          {
            "node": "Set Data Hoje4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets4": {
      "main": [
        [
          {
            "node": "Apagar Supabase4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Data Hoje4": {
      "main": [
        [
          {
            "node": "AI Agent4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Apagar Supabase4": {
      "main": [
        [
          {
            "node": "Telegram8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code6": {
      "main": [
        [
          {
            "node": "Google Sheets4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Switch2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "5e0f89c6-cf0e-428a-874e-e5831bc71cf2",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "046ce95f24a209912c7686297c05b4e4361b7981100e311eb9e5047e3198a92d"
  },
  "id": "Ciwi8WqDFZMOiN3B",
  "tags": []
}